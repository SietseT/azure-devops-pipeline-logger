trigger:
- main
- development
- feature
- hotfix

pool:
  vmImage: 'windows-latest'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: gitversion/setup@0
      displayName: 'Setup GitVersion'
      inputs:
        versionSpec: '5.x'

    - task: gitversion/execute@0
      displayName: 'Determine version'
      inputs:
        useConfigFile: true
        configFilePath: '$(System.DefaultWorkingDirectory)\src\GitVersion.yml'
    - task: UseDotNet@2
      displayName: 'Use .NET 6.x'
      inputs:
        packageType: 'sdk'
        version: '6.x'

    - task: DotNetCoreCLI@2
      displayName: "dotnet build"
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration) /p:Version=$(NuGetVersionV2)'

    - task: DotNetCoreCLI@2
      displayName: "dotnet test"
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--collect:"XPlat Code Coverage'

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage results'
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Agent.TempDirectory)/*/coverage.cobertura.xml

    - task: DotNetCoreCLI@2
      displayName: 'dotnet pack'
      inputs:
        command: 'pack'
        packagesToPack: '**/AzureDevops.Logger.csproj'
        nobuild: true
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'NuGetVersionV2'

    - task: PublishPipelineArtifact@1
      displayName: 'Publish pipeline artifact'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'nuget'
        publishLocation: 'pipeline'


- stage: Publish
  jobs:
  - deployment: publishpackage   # name of the deployment job, A-Z, a-z, 0-9, and underscore. The word "deploy" is a keyword and is unsupported as the deployment name.
    displayName: "Publish NuGet package"  # friendly name to display in the UI
    condition: succeeded()
    environment: nuget-org
    strategy:
      runOnce:    #rolling, canary are the other strategies that are supported
        deploy:
          steps:
            - task: DownloadPipelineArtifact@2
              displayName: "Download pipeline artifact"
              inputs:
                buildType: 'current'
                artifactName: 'nuget'
                itemPattern: '**.nupkg'
                targetPath: '$(Pipeline.Workspace)\nuget'
            - task: NuGetCommand@2
              inputs:
                command: 'push'
                packagesToPush: '$(Pipeline.Workspace)/nuget/*.nupkg;!$(Pipeline.Workspace)/nuget/*.symbols.nupkg'
                nuGetFeedType: 'external'
                publishFeedCredentials: 'nuget.org'
